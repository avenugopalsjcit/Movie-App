using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Services;
using SCAdminBAL;
using SCAdminBAL.GlobalReferences;

namespace SCAdmin
{
    public partial class GlobalReference : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        [WebMethod]
        public static List<AvailabilityGrid> GetGridAvailabilityDetails()
        {
            AdminAvailabilityViewBAL objAdminAvialGet = new AdminAvailabilityViewBAL();
            return objAdminAvialGet.GetGridAvailabilityDetails();
        }
        [WebMethod]
        public static int GetMaxAvailCD()
        {
            AdminAvailabilityViewBAL objAdminAvialGet = new AdminAvailabilityViewBAL();
            return objAdminAvialGet.GetMaxAvailCD();
        }



        [WebMethod]
        public static int InsertAdminAvail(string strAvailCd, string strAvailDesc, string strAvailAbbr, string strAvailValidCd, string User_id)
        {

            AdminAvailabilityViewBAL objAdminAvialInsert = new AdminAvailabilityViewBAL();

            int count = objAdminAvialInsert.InsertAdminAvail(strAvailCd, strAvailDesc, strAvailAbbr, strAvailValidCd, User_id);

            return count;
        }

        [WebMethod]
        public static int DeleteAdminAvail(string strAvailCd)
        {
            AdminAvailabilityViewBAL objAdminAvialDelete = new AdminAvailabilityViewBAL();
            return objAdminAvialDelete.DeleteAdminAvail(strAvailCd);

        }

        [WebMethod]
        public static List<AvailabilityGrid> PopupGridAdminAvail(string AvailValidCd)
                {
                    AdminAvailabilityViewBAL objAdminAvialDelete = new AdminAvailabilityViewBAL();
                    return objAdminAvialDelete.PopupGridAdminAvail(AvailValidCd);

                }

        [WebMethod]
        public static int UpdateAdminAvail(string strAvailDesc, string strAvailAbbr, string strAvailValidCd, string User_id, string strAvailCd)
        {
            AdminAvailabilityViewBAL objAdminAvialUpdate = new AdminAvailabilityViewBAL();
            return objAdminAvialUpdate.UpdateAdminAvail(strAvailDesc, strAvailAbbr, strAvailValidCd, User_id, strAvailCd);

        }

        [WebMethod]
        public static List<AdminBtgfrGrid> GetGridAdminBtgfrView()
        {
            AdminAvailabilityViewBAL objAdminAvialGet = new AdminAvailabilityViewBAL();
            return objAdminAvialGet.GetGridAdminBtgfrView();
        }








        [WebMethod]
        public static List<UnitofMeasure> GetGridUnitOfMeasureDetails()
        {
            AdminUnitOfMeasureBAL objAdminUOMGet = new AdminUnitOfMeasureBAL();
            return objAdminUOMGet.GetGridUOMDetails();
        }
        [WebMethod]
        public static int GetMaxUOMCD()
        {
            AdminUnitOfMeasureBAL objAdminAvialGet = new AdminUnitOfMeasureBAL();
            return objAdminAvialGet.GetMaxAvailCD();
        }



        [WebMethod]
        public static int InsertAdminUnitOfMeasure(string strAvailCd, string UOMDescription, string User_id)
        {

            AdminUnitOfMeasureBAL objAdminUOMInsert = new AdminUnitOfMeasureBAL();

            int count = objAdminUOMInsert.InsertAdminAvail(strAvailCd, UOMDescription, User_id);

            return count;
        }

        [WebMethod]
        public static int DeleteAdminUnitOfMeasure(string strAvailCd)
        {
            AdminUnitOfMeasureBAL objAdminUOMDelete = new AdminUnitOfMeasureBAL();
            return objAdminUOMDelete.DeleteAdminAvail(strAvailCd);

        }

        [WebMethod]
        public static List<UnitofMeasure> PopupGridAdminUnitOfMeasure(string UOMId)
        {
            AdminUnitOfMeasureBAL objAdminUOMDelete = new AdminUnitOfMeasureBAL();
            return objAdminUOMDelete.PopupGridAdminAvail(UOMId);

        }

        [WebMethod]
        public static int UpdateAdminUnitOfMeasure(string UOMDescription, string User_id, string strAvailCd)
        {
            AdminUnitOfMeasureBAL objAdminUOMUpdate = new AdminUnitOfMeasureBAL();
            return objAdminUOMUpdate.UpdateAdminAvail(UOMDescription, User_id, strAvailCd);

        }






        [WebMethod]
        public static List<MapUnitofMeasure> GetGridMapUnitOfMeasureDetails()
        {
            MapUnitofMeasureBAL objAdminUOMGet = new MapUnitofMeasureBAL();
            return objAdminUOMGet.GetGridMapUOMDetails();
        }
        [WebMethod]
        public static List<MapUnitofMeasure> GetListBoxMapUnitOfMeasureDetails(string CharTypeID)
        {
            MapUnitofMeasureBAL objAdminUOMGet = new MapUnitofMeasureBAL();
            return objAdminUOMGet.GetListBoxMapUOMDetails(CharTypeID);
        }

        [WebMethod]
        public static List<MapUnitofMeasure> GetDropdownMapUnitOfMeasureDetails(string CharTypeID)
        {
            MapUnitofMeasureBAL objAdminUOMGet = new MapUnitofMeasureBAL();
            return objAdminUOMGet.GetDropdownMapUOMDetails(CharTypeID);
        } 
        
        [WebMethod]
        public static List<MapUnitofMeasure> GetUOMSubsetUnitOfMeasureDetails(string CharTypeID, string UOMId)
        {
            MapUnitofMeasureBAL objAdminUOMGet = new MapUnitofMeasureBAL();
            return objAdminUOMGet.GetUOMSubsetMapUOMDetails(CharTypeID, UOMId);
        }
        [WebMethod]
        public static int GetMaxMapUOMCD()
        {
            MapUnitofMeasureBAL objAdminAvialGet = new MapUnitofMeasureBAL();
            return objAdminAvialGet.GetMaxMapUOM();
        }
        [WebMethod]
        public static int InsertAdminMapUnitOfMeasure(string strAvailCd, string CharTypeID, string UOMId, string User_id)
        {

            MapUnitofMeasureBAL objAdminUOMInsert = new MapUnitofMeasureBAL();

            int count = objAdminUOMInsert.InsertAdminMapUOM(strAvailCd, CharTypeID, UOMId, User_id);

            return count;
        }
        [WebMethod]
        public static List<MapUnitofMeasure> PopupGridAdminMapUnitOfMeasure(string UOMId,string CharTypeID)
        {
            MapUnitofMeasureBAL objAdminUOMDelete = new MapUnitofMeasureBAL();
            return objAdminUOMDelete.PopupGridAdminMapUOM(UOMId, CharTypeID);

        }
        [WebMethod]
        public static int DeleteAdminMapUnitOfMeasure(string UOMSubsetID)
        {
            MapUnitofMeasureBAL objAdminUOMDelete = new MapUnitofMeasureBAL();
            return objAdminUOMDelete.AdminMapUOMDelete(UOMSubsetID);

        }





        [WebMethod]
        public static List<NotesPriority> GetGridNotesPriorityDetails()
        {
            AdminNotesPriorityBAL objAdminNotesPriorityGet = new AdminNotesPriorityBAL();
            return objAdminNotesPriorityGet.GetGridNotesPriorityDetails();
        }
        [WebMethod]
        public static int GetMaxPriorityCD()
        {
            AdminNotesPriorityBAL objAdminAvialGet = new AdminNotesPriorityBAL();
            return objAdminAvialGet.GetMaxAvailCD();
        }



        [WebMethod]
        public static int InsertAdminNotesPriority(string strAvailCd, string PriorityDescription, string User_id)
        {

            AdminNotesPriorityBAL objAdminNotesPriorityInsert = new AdminNotesPriorityBAL();

            int count = objAdminNotesPriorityInsert.InsertAdminAvail(strAvailCd, PriorityDescription, User_id);

            return count;
        }

        [WebMethod]
        public static int DeleteAdminNotesPriority(string strAvailCd)
        {
            AdminNotesPriorityBAL objAdminNotesPriorityDelete = new AdminNotesPriorityBAL();
            return objAdminNotesPriorityDelete.DeleteAdminAvail(strAvailCd);

        }

        [WebMethod]
        public static List<NotesPriority> PopupGridAdminNotesPriority(string PriorityId)
        {
            AdminNotesPriorityBAL objAdminNotesPriorityDelete = new AdminNotesPriorityBAL();
            return objAdminNotesPriorityDelete.PopupGridAdminAvail(PriorityId);

        }

        [WebMethod]
        public static int UpdateAdminNotesPriority(string PriorityDescription, string User_id, string strAvailCd)
        {
            AdminNotesPriorityBAL objAdminNotesPriorityUpdate = new AdminNotesPriorityBAL();
            return objAdminNotesPriorityUpdate.UpdateAdminAvail(PriorityDescription, User_id, strAvailCd);

        }







        [WebMethod]
        public static List<NotesCategory> GetGridNotesCategoryDetails()
        {
            AdminNotesCategoryBAL objAdminNotesCategoryGet = new AdminNotesCategoryBAL();
            return objAdminNotesCategoryGet.GetGridNotesCategoryDetails();
        }
        [WebMethod]
        public static int GetMaxCategoryCD()
        {
            AdminNotesCategoryBAL objAdminAvialGet = new AdminNotesCategoryBAL();
            return objAdminAvialGet.GetMaxAvailCD();
        }



        [WebMethod]
        public static int InsertAdminNotesCategory(string strAvailCd, string CategoryDescription, string User_id)
        {

            AdminNotesCategoryBAL objAdminNotesCategoryInsert = new AdminNotesCategoryBAL();

            int count = objAdminNotesCategoryInsert.InsertAdminAvail(strAvailCd, CategoryDescription, User_id);

            return count;
        }

        [WebMethod]
        public static int DeleteAdminNotesCategory(string strAvailCd)
        {
            AdminNotesCategoryBAL objAdminNotesCategoryDelete = new AdminNotesCategoryBAL();
            return objAdminNotesCategoryDelete.DeleteAdminAvail(strAvailCd);

        }

        [WebMethod]
        public static List<NotesCategory> PopupGridAdminNotesCategory(string CategoryId)
        {
            AdminNotesCategoryBAL objAdminNotesCategoryDelete = new AdminNotesCategoryBAL();
            return objAdminNotesCategoryDelete.PopupGridAdminAvail(CategoryId);

        }

        [WebMethod]
        public static int UpdateAdminNotesCategory(string CategoryDescription, string User_id, string strAvailCd)
        {
            AdminNotesCategoryBAL objAdminNotesCategoryUpdate = new AdminNotesCategoryBAL();
            return objAdminNotesCategoryUpdate.UpdateAdminAvail(CategoryDescription, User_id, strAvailCd);

        }




        [WebMethod]
        public static List<Documentation> GetGridAdminDocumentationView(string AccessLevel,string User_id)
        {
            AdminDocumentationBAL objAdminAvialGet = new AdminDocumentationBAL();
            return objAdminAvialGet.GetGridAdminDocumentationView(AccessLevel, User_id);
        }
        [WebMethod]
        public static List<Documentation> GetProductDocumentationView(string AccessLevel, string User_id)
        {
            AdminDocumentationBAL objAdminAvialGet = new AdminDocumentationBAL();
            return objAdminAvialGet.GetProductsDocumentationView(AccessLevel, User_id);
        }
        
        [WebMethod]
        public static int UpdateAdminDocumentation(int productID, int ProductLocLevelCd, string Title, string DocumentURL, string Description, int User_id, int strAvailCd)
        {
            AdminDocumentationBAL objAdminDocumentaionUpdate = new AdminDocumentationBAL();
            return objAdminDocumentaionUpdate.UpdateAdminDocumentation(productID, ProductLocLevelCd, Title, DocumentURL, Description, User_id, strAvailCd);

        }
        [WebMethod]
        public static int InsertAdminDocumentation(int strAvailCd, int productID, int ProductLocLevelCd, string Title, string DocumentURL, string Description, string User_id)
        {

            AdminDocumentationBAL objAdminDocumentaionInsert = new AdminDocumentationBAL();

            int count = objAdminDocumentaionInsert.InsertAdminDocumentation(strAvailCd, productID, ProductLocLevelCd, Title, DocumentURL, Description, User_id);

            return count;
        }

        [WebMethod]
        public static int DeleteAdminDocumentation(string strAvailCd)
        {
            AdminDocumentationBAL objAdminDocumentationDelete = new AdminDocumentationBAL();
            return objAdminDocumentationDelete.DeleteAdminDocumentation(strAvailCd);

        }    
        [WebMethod]
        public static int GetMaxDocumentationCD()
        {
            AdminDocumentationBAL objAdminDocGet = new AdminDocumentationBAL();
            return objAdminDocGet.GetMDocCD();
        }
        [WebMethod]
        public static int GetProductLevelCDDocumentationCD(int ProductId)
        {
            AdminDocumentationBAL objAdminDocGet = new AdminDocumentationBAL();
            return objAdminDocGet.GetProductLevelCD(ProductId);
        }






        [WebMethod]
        public static List<Glossary> GetGridAdminGlossaryView(string AccessLevel, string User_id)
        {
            AdminGlossaryViewBAL objAdminAvialGet = new AdminGlossaryViewBAL();
            return objAdminAvialGet.GetGridAdminDocumentationView(AccessLevel, User_id);
        }

        [WebMethod]
            public static List<Glossary> GetGridAdminGlossaryProductView(string AccessLevel, string User_id)
            {
                AdminGlossaryViewBAL objAdminAvialGet = new AdminGlossaryViewBAL();
                return objAdminAvialGet.GetGridAdminGlossaryProductView(AccessLevel, User_id);
            }

        [WebMethod]
        public static List<Glossary> GetAdminGlossaryView(string ProductCD, string lblGlossaryTerm)
            {
                AdminGlossaryViewBAL objAdminAvialGet = new AdminGlossaryViewBAL();
                return objAdminAvialGet.GetAdminGlossaryView(ProductCD, lblGlossaryTerm);
            }
        [WebMethod]
        public static List<Glossary> PopupGridAdminGlossary(string TermId)
        {
            AdminGlossaryViewBAL objAdminGlossary = new AdminGlossaryViewBAL();
            return objAdminGlossary.PopupGridAdminGlossary(TermId);

        }
        [WebMethod]
        public static int InsertUpdateAdminGlossary(string ProductCD, string TermName, string TermDesc, string User_id)
        {

            AdminGlossaryViewBAL objAdminUpdateInsert = new AdminGlossaryViewBAL();

            objAdminUpdateInsert.InsertUpdateAdminGlossary(ProductCD, TermName, TermDesc, User_id);

            return 1;
        }

        [WebMethod]
        public static int DeleteAdminGlossary(string TermName, string ProductCD)
        {
            AdminGlossaryViewBAL objAdminGlossaryDelete = new AdminGlossaryViewBAL();
             objAdminGlossaryDelete.AdminGlossaryDelete(TermName,ProductCD);
             return 1;

        }






        [WebMethod]
        public static List<CallerAccessSupplier> GetGridAdminCallerAccessSupplierView()
        {
            AdminCallerAccessSupplierBAL objAdminCallerGet = new AdminCallerAccessSupplierBAL();
            return objAdminCallerGet.GetGridAdminCallerAccessSupplierView();
        }

        [WebMethod]
        public static List<CallerAccessSupplier> GetGridAdminCallerAccessSupplierDropdown()
        {
            AdminCallerAccessSupplierBAL objAdminCallerGet = new AdminCallerAccessSupplierBAL();
            return objAdminCallerGet.GetGridAdminCallerAccessSupplierDropdown();
        }

        [WebMethod]
        public static List<CallerAccessSupplier> GetGridAdminCallerAccessSupplierMatrix()
        {
            AdminCallerAccessSupplierBAL objAdminCallerGet = new AdminCallerAccessSupplierBAL();
            return objAdminCallerGet.GetGridAdminCallerAccessSupplierMatrix();
        }
        [WebMethod]
        public static List<CallerAccessSupplier> SetDropdownAdminCallerAccessSupplierMatrix(string OptionMatrixId)
        {
            AdminCallerAccessSupplierBAL objAdminCallerGet = new AdminCallerAccessSupplierBAL();
            return objAdminCallerGet.SetDropdownAdminCallerAccessSupplierMatrix(OptionMatrixId);
        }








        [WebMethod]
        public static List<AdminAddressGrid> GetGridAdminAddress()
        {
            AdminAddressViewBAL objAdminAvialGet = new AdminAddressViewBAL();
            return objAdminAvialGet.GetGridAdminAddress();
        }

        [WebMethod]
        public static AdminAddressList GetAdminAddressDetails()
        {
            AdminAddressViewBAL objAdminAvialGet = new AdminAddressViewBAL();
          return  objAdminAvialGet.GetAdminAddressDetail();
        }



        [WebMethod]
        public static List<OrderPortSpeed> GetGridAdminOrderPortSpeedView()
        {
            OrderPortSpeedBAL objAdminAvialGet = new OrderPortSpeedBAL();
            return objAdminAvialGet.GetGridAdminBtgfrView();
        }
        [WebMethod]
        public static List<OrderAccessSpeed> GetGridAdminOrderAccessSpeedView()
        {
            OrderAccessSpeedBAL objAdminAvialGet = new OrderAccessSpeedBAL();
            return objAdminAvialGet.GetGridAdminBtgfrView();
        }

        [WebMethod]
        public static int UpdateAdminPortSpeed(string User_id, string charid, string charNumValue)
        {
            OrderPortSpeedBAL objAdminUOMUpdate = new OrderPortSpeedBAL();
            return objAdminUOMUpdate.UpdateAdminPortSpeed(User_id, charid, charNumValue);

        }
        [WebMethod]
        public static int UpdateAdminAccessSpeed(string User_id, string charid, string charNumValue)
        {
            OrderAccessSpeedBAL objAdminUOMUpdate = new OrderAccessSpeedBAL();
            return objAdminUOMUpdate.UpdateAdminAccessSpeed(User_id, charid, charNumValue);
              
        }


    }
}