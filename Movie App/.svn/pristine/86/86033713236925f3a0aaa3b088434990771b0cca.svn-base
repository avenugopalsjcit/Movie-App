app.factory('AvailabilityGridFactory', function ($http) {

    var AvailabilityGridFactory = {};

    AvailabilityGridFactory.GetAvailabilityGrid = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/GetGridAvailabilityDetails', {});
       // $window.location.href = 'WebForm1.aspx';


    }

    return AvailabilityGridFactory;
});
app.factory('AvailabilityMaxValidFactory', function ($http) {

    var AvailabilityMaxValidFactory = {};

    AvailabilityMaxValidFactory.GetAvailabilityMaxValid = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/GetMaxAvailCD', {});

    }

    return AvailabilityMaxValidFactory;
});

app.factory('AvailabilityInsertFactory', function ($http) {

    var AvailabilityInsertFactory = {};

    AvailabilityInsertFactory.GetAvailabilityInsert = function () {
        $(".pageLoaderOverlay").show();
       return $http.post('GlobalReference.aspx/InsertAdminAvail', { 'strAvailCd': strAvailCd, 'strAvailDesc': strAvailDesc, 'strAvailAbbr': strAvailAbbr, 'strAvailValidCd': strAvailValidCd, 'User_id': User_id });

    }

    return AvailabilityInsertFactory;
});

app.factory('AvailabilityUpdateFactory', function ($http) {

    var AvailabilityUpdateFactory = {};

    AvailabilityUpdateFactory.GetAvailabilityUpdate = function () {
        $(".pageLoaderOverlay").show();
       return $http.post('GlobalReference.aspx/UpdateAdminAvail', { 'strAvailDesc': strAvailDesc, 'strAvailAbbr': strAvailAbbr, 'strAvailValidCd': strAvailValidCd, 'User_id': User_id, 'strAvailCd': strAvailCd });

    }

    return AvailabilityUpdateFactory;
});


app.factory('AvailabilityDeleteFactory', function ($http) {

    var AvailabilityDeleteFactory = {};

    AvailabilityDeleteFactory.GetAvailabilityDelete = function () {
        $(".pageLoaderOverlay").show();
     return   $http.post('GlobalReference.aspx/DeleteAdminAvail', { 'strAvailCd': strAvailCd });

    }

    return AvailabilityDeleteFactory;
});

app.factory('AvailabilityPopupGrid', function ($http) {

    var AvailabilityPopupGrid = {};

    AvailabilityPopupGrid.GetAvailabilityPopup = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/PopupGridAdminAvail', { 'AvailValidCd': AvailValidCd });

    }

    return AvailabilityPopupGrid;
});





app.controller('MainCntl', ['$scope', '$window', 'AvailabilityGridFactory', 'NgTableParams', 'AvailabilityMaxValidFactory', 'AvailabilityInsertFactory', 'AvailabilityUpdateFactory', 'AvailabilityDeleteFactory', 'AvailabilityPopupGrid', '$timeout', function ($scope, $window, AvailabilityGridFactory, NgTableParams, AvailabilityMaxValidFactory, AvailabilityInsertFactory, AvailabilityUpdateFactory, AvailabilityDeleteFactory, AvailabilityPopupGrid, $timeout) {



    //    $scope.$on('$viewContentLoaded', function () {

    //       
    //    });


    AvailabilityGridFactory.GetAvailabilityGrid().success(function (data) {

        //$scope.CurrentDate = new Date();
        $scope.Availabilityvalid = [];
        $scope.AvailabilityGrid = data;
        $scope.Reset = 0;


        if (data.d.length == 0) {


            $scope.showNodata = true;
            $('#tblAnnouncements').hide();
            $scope.Nodata = "There are no Announcement(s).";
        }
        else {
            $scope.showNodata = false;
            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
            //            $timeout(function () {
            //                $('.ng-table-pager').hide();
            //            }, 3000);
            $scope.PageIndex = 0;
            data.d.forEach(function (item, index) {
                $scope.Availabilityvalid.push(item.AvailabilityValid);
                $scope.Availdefault = new NgTableParams({}, { total: $scope.usersTable.length, getData:
                            function ($defer, params) {
                                $scope.PageIndex = (params.page() - 1) * params.count();
                                $scope.data = params.sorting() ? $filter('orderBy')($scope.usersTable, params.orderBy()) : $scope.usersTable;
                                $scope.data = params.filter() ? $filter('filter')($scope.data, params.filter()) : $scope.data;
                                $scope.data = $scope.data.slice((params.page() - 1) * params.count(), params.page() * params.count());
                            }
                });
            });

            $(".pageLoaderOverlay").hide();
            //$("div[ng-table-pagination = 'params']").remove();
        }



    });
    //$(".pageLoaderOverlay").hide();

    var availAbbr, availDesc, availValid = "";

    $scope.EditRecord = function (Id) {
        //        AvailValidCd = category.AvailValidCd;
        //        $scope.AvailabilityAbbr = category.AvailabilityAbbr;
        //        $scope.Description = category.AvailabilityDesc;
        //        $scope.Valid = category.AvailabilityValid;
        //        availAbbr = category.AvailabilityAbbr;
        //        availDesc = category.AvailabilityDesc;
        //        availValid = category.AvailabilityValid;
        $scope.Reset = 1;
        if ($.trim($('#' + Id).find('td').first().text()) != '') {

            $('#' + Id).find('td').first().html("<input type='text' maxlength='39' value='" + $.trim($('#' + Id).find('td').first().text()) + "'></input>");
            $('#' + Id).find('span').first().hide();
            $('#' + Id).find('td').first().next().html("<input type='text' maxlength='39' value='" + $.trim($('#' + Id).find('td').first().next().text()) + "'></input>");
            $('#' + Id).find('span').first().hide();
            $('#' + Id).find('span').first().next().show();
        }
        //        AvailabilityPopupGrid.GetAvailabilityPopup(AvailValidCd).success(function (data) {
        //            $scope.usersTable2 = data.d;
        //            $(".pageLoaderOverlay").hide();
        //        });
    }



    $scope.addNewTask = function () {
        $scope.AvailabilityAbbr = $scope.Description = $scope.Valid = "";
        $scope.Reset = 0;
    }



    $scope.ResetRecord = function () {

        $scope.AvailabilityAbbr = availAbbr;
        $scope.Description = availDesc;
        $scope.Valid = availValid;
    }



    $scope.SaveAdminAvail = function () {
        // debugger;
        strAvailDesc = $scope.Description;

        strAvailAbbr = $scope.AvailabilityAbbr;
        User_id = $scope.User_Id;
        if ($('#inputValid')[0].checked == true) {
            strAvailValidCd = true;
        }
        else {
            strAvailValidCd = false;
        }
        //            $http.post('GlobalReference.aspx/GetMaxAvailCD', {}).success(function (data) {
        //                strAvailCd = data;

        //            });

        if (strAvailAbbr == "" && strAvailAbbr == "") {
        }
        else {
            AvailabilityMaxValidFactory.GetAvailabilityMaxValid().success(function (data) {


                strAvailCd = data.d;
                strAvailCd = strAvailCd + 1;
                AvailabilityInsertFactory.GetAvailabilityInsert().success(function (data) {
                    if (data.d == 0) {
                        AvailabilityGridFactory.GetAvailabilityGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Availability Added Successfully",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });

                    }
                    else {
                        AvailabilityGridFactory.GetAvailabilityGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Availability Already Exist",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });
                    }


                });
            });


        }

    }

    $scope.CancelUpdate = function (Id, val, data, data1, data2) {

        $('#' + Id).find('td').first().html(data);
        $('#' + Id).find('td').first().next().html(data1);
        $('#' + Id).find('input')[0].checked = data2;
        $('#' + Id).find('span').first().show();
        $('#' + Id).find('span').first().next().hide();
        $('#' + Id).find('td').first().find('span').hide();

    }

    $scope.UpdateRecord = function (Id, val, data) {


        $scope.AvailValidCd = data.AvailValidCd;
        $scope.AvailabilityAbbr = data.AvailabilityAbbr;
        $scope.Description = data.AvailabilityDesc;
        $scope.Valid = data.AvailabilityValid;
        if ($.trim($('#' + Id).find('input')[1].value) != '') {
            availAbbr = $.trim($('#' + Id).find('input')[1].value);

            if ($.trim($('#' + Id).find('input').first().val()) != '') {
                $scope.Description = $.trim($('#' + Id).find('input').first().val());

                availDesc = data.AvailabilityDesc;
                strAvailValidCd = $scope.Availabilityvalid[val];

                $('#' + Id).find('td').first().html(data);
                $('#' + Id).find('td').first().next().html(data);
                $('#' + Id).find('span').first().show();
                $('#' + Id).find('span').first().next().hide();
                $('#' + Id).find('td').first().find('span').hide();

                bootbox.confirm({
                    "className": "my-custom-class",
                    message: "Are you sure to update Availability?",
                    callback: function (result) {
                        if (result) {
                            strAvailDesc = $scope.Description;
                            strAvailCd = $scope.AvailValidCd;
                            strAvailAbbr = availAbbr;
                            User_id = $scope.User_Id;
                            //                    if ($('#inputValid')[0].checked == true) {
                            //                        strAvailValidCd = true;
                            //                    }
                            //                    else {
                            //                        strAvailValidCd = false;
                            //                    }


                            AvailabilityUpdateFactory.GetAvailabilityUpdate().success(function (data) {
                                AvailabilityGridFactory.GetAvailabilityGrid().success(function (data) {

                                    $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                                    $(".pageLoaderOverlay").hide();
                                    bootbox.alert({
                                        "message": "Availability Updated Successfully",
                                        "className": "my-custom-class",
                                        "callback": function () {
                                            console.log("Success callback");
                                        }
                                    });
                                });
                            });
                        }
                    }
                });
            }
            else {
                $('#' + Id).find('td').first().html("<input type='text' value=''></input>" + "<br /><span style='color:Red;' class='Arrow'> The Availability cannot be blank</span>");
            }
        }
        else {
            $('#' + Id).find('td').first().next().html("<input type='text' value=''></input>" + "<br /><span style='color:Red;' class='Arrow'> The Abbreviation cannot be blank</span>");
        }

    }


    $scope.DeleteAdminAvail = function (category) {
        strAvailCd = category.AvailValidCd;
        bootbox.confirm({
            "className": "my-custom-class",
            message: "Are you sure to delete Availability <b> " + category.AvailabilityDesc + "</b>?",
            callback: function (result) {
                if (result) {
                    $(".pageLoaderOverlay").hide();
                    AvailabilityDeleteFactory.GetAvailabilityDelete(strAvailCd).success(function (data) {



                        AvailabilityGridFactory.GetAvailabilityGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Availability Deleted Successfully",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });

                    });

                }
            }


        });


    }









} ]);











  








