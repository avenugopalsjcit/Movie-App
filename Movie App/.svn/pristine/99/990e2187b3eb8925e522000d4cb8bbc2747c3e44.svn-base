app.factory('AdminPriorityGridFactory', function ($http) {

    var AdminPriorityGridFactory = {};

    AdminPriorityGridFactory.GetAdminAddressGrid = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/GetGridNotesPriorityDetails', {});

    }

    return AdminPriorityGridFactory;
});
app.factory('PriorityDetailsFactory', function ($http) {

    var PriorityDetailsFactory = {};

    PriorityDetailsFactory.GetPriorityDetails = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/GetMaxPriorityCD', {});

    }

    return PriorityDetailsFactory;  
});

app.factory('PriorityInsertFactory', function ($http) {

    var PriorityInsertFactory = {};

    PriorityInsertFactory.GetAvailabilityInsert = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/InsertAdminNotesPriority', { 'strAvailCd': strAvailCd, 'PriorityDescription': PriorityDescription, 'User_id': User_id });

    }

    return PriorityInsertFactory;
});

app.factory('PriorityUpdateFactory', function ($http) {

    var PriorityUpdateFactory = {};

    PriorityUpdateFactory.GetAvailabilityUpdate = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/UpdateAdminNotesPriority', { 'PriorityDescription': PriorityDescription, 'User_id': User_id, 'strAvailCd': strAvailCd });

    }

    return PriorityUpdateFactory;
});


app.factory('PriorityDeleteFactory', function ($http) {

    var PriorityDeleteFactory = {};

    PriorityDeleteFactory.GetAvailabilityDelete = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/DeleteAdminNotesPriority', { 'strAvailCd': strAvailCd });

    }

    return PriorityDeleteFactory;
});

app.factory('PriorityPopupGrid', function ($http) {

    var PriorityPopupGrid = {};

    PriorityPopupGrid.GetAvailabilityPopup = function () {
        $(".pageLoaderOverlay").show();
        return $http.post('GlobalReference.aspx/PopupGridAdminNotesPriority', { 'PriorityId': PriorityId });

    }

    return PriorityPopupGrid;
});

app.controller('AdminNotesPriorityCtrl', ['$scope', 'AdminPriorityGridFactory', 'NgTableParams', 'PriorityDetailsFactory', 'PriorityInsertFactory', 'PriorityUpdateFactory', 'PriorityDeleteFactory', 'PriorityPopupGrid', function ($scope, AdminPriorityGridFactory, NgTableParams, PriorityDetailsFactory, PriorityInsertFactory, PriorityUpdateFactory, PriorityDeleteFactory, PriorityPopupGrid) {













    AdminPriorityGridFactory.GetAdminAddressGrid().success(function (data) {

        //$scope.CurrentDate = new Date();

        $scope.AddressGrid = data;



        if (data.d.length == 0) {


            $scope.showNodata = true;
            $('#tblAnnouncements').hide();
            $scope.Nodata = "There are no Announcement(s).";
        }
        else {
            $scope.showNodata = false;
            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
            $(".pageLoaderOverlay").hide();
            //$("div[ng-table-pagination = 'params']").remove();
        }
    });
    //$(".pageLoaderOverlay").hide();

    PriorityDescription = "", PriorityId = "";

    $scope.EditRecord = function (Id) {
        //        PriorityId = category.NotesPriorityCD;
        //        $scope.PriorityDesc = category.NotesPriorityDesc;
        //        PriorityDescription = category.NotesPriorityDesc;
        //       
        //        $scope.Reset = 1;
        //        PriorityPopupGrid.GetAvailabilityPopup(PriorityId).success(function (data) {
        //            $scope.usersTable2 = data.d;
        //            $(".pageLoaderOverlay").hide();
        //        });

        if ($.trim($('#' + Id).find('td').first().text()) != '') {

            $('#' + Id).find('td').first().html("<input type='text' maxlength='19' value='" + $.trim($('#' + Id).find('td').first().text()) + "'></input>");
            $('#' + Id).find('span').first().hide();
            $('#' + Id).find('span').first().next().show();

        }
    }

    $scope.CancelUpdate = function (Id, index, data) {

        $('#' + Id).find('td').first().html(data);
        $('#' + Id).find('span').first().show();
        $('#' + Id).find('span').first().next().hide();
        $('#' + Id).find('td').first().find('span').hide();

    }

    $scope.addNewTask = function () {
        $scope.PriorityDesc = "";
        $scope.Reset = 0;
    }



    $scope.ResetRecord = function () {

        $scope.PriorityDesc = PriorityDescription;

    }



    $scope.SaveAdminAvail = function () {
        // debugger;

        PriorityDescription = $scope.PriorityDesc;
        //        strAvailAbbr = $scope.AvailabilityAbbr;
        User_id = $scope.User_Id;

        if (PriorityDescription == "") {
        }
        else {
            PriorityDetailsFactory.GetPriorityDetails().success(function (data) {


                strAvailCd = data.d;
                strAvailCd = strAvailCd + 1;
                PriorityInsertFactory.GetAvailabilityInsert(strAvailCd, PriorityDescription, User_id).success(function (data) {
                    //alert("hi");
                    // str = data.d;
                    if (data.d == 0) {
                        AdminPriorityGridFactory.GetAdminAddressGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Availability Added Successfully",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });

                    }
                    else {
                        AdminPriorityGridFactory.GetAdminAddressGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Notes Priority Already Exist",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });
                    }
                   


                });
            });


        }

    }



    $scope.UpdateRecord = function (Id, val, data) {
        if ($.trim($('#' + Id).find('input').first().val()) != '') {
            bootbox.confirm({
                "className": "my-custom-class",
                message: "Are you sure to update Notes Priority?",
                callback: function (result) {
                    if (result) {
                        PriorityDescription = $.trim($('#' + Id).find('input').first().val());
                        strAvailCd = data.NotesPriorityCD;
                        //        strAvailAbbr = $scope.AvailabilityAbbr;
                        User_id = $scope.User_Id;


                        PriorityUpdateFactory.GetAvailabilityUpdate().success(function (data) {
                            AdminPriorityGridFactory.GetAdminAddressGrid().success(function (data) {

                                $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                                $(".pageLoaderOverlay").hide();

                                bootbox.alert({
                                    "message": "Notes Priority Updated Successfully",
                                    "className": "my-custom-class",
                                    "callback": function () {
                                        console.log("Success callback");
                                    }
                                });
                            });
                        });
                    }
                }
            });
        }
        else {
            $('#' + Id).find('td').first().html("<input type='text' value=''></input>" + "<br /><span style='color:Red;' class='Arrow'> The Description cannot be blank</span>");
        }
    }


    $scope.DeleteAdminPriority = function (category) {
        strAvailCd = category.NotesPriorityCD;
        bootbox.confirm({
            "className": "my-custom-class",
            message: "Are you sure to delete Notes Priority <b> " + category.NotesPriorityDesc + "</b>?",
            callback: function (result) {
                if (result) {
                    $(".pageLoaderOverlay").hide();
                    PriorityDeleteFactory.GetAvailabilityDelete(strAvailCd).success(function (data) {



                        AdminPriorityGridFactory.GetAdminAddressGrid().success(function (data) {

                            $scope.usersTable = new NgTableParams({}, { 'dataset': data.d });
                            $(".pageLoaderOverlay").hide();
                            bootbox.alert({
                                "message": "Notes Priority Deleted Successfully",
                                "className": "my-custom-class",
                                "callback": function () {
                                    console.log("Success callback");
                                }
                            });
                        });

                    });
                }
            }

        });


    }









} ]);











  








