using System;
using System.Linq;
using System.Data;
using Oracle.DataAccess.Client;
using System.Configuration;
using System.Collections.Generic;
using System.Text;
using adminBAL = SCAdminDAL;


namespace SCAdminDAL
{

    public class ProductDefinationDAL
    {

        #region ServiceType Operations
        public static DataTable getSeviceTypes()
        {
            OracleConnection oConn = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            GetDataFromDB objGetDataFromDB = new GetDataFromDB();
            string str = string.Empty;
            str = @"select SERVICE_TYPE_CD,SERVICE_TYPE_DESC,CREATED_EMP_ID,SERVICE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT from CSU_REF_SERVICE_TYPE ";
            OracleCommand cmd = new OracleCommand(str.ToString(), oConn);
            return objGetDataFromDB.GetDataTable(str.ToString());
        }



       // public static int InsertSeviceTypes(Servicetype service, int UpdateId = 0, int InsertId = 0)

        public static int InsertSeviceTypes( string Userid,Servicetype service, int UpdateId = 0, int InsertId = 0)

        {
            int status = 0;
            OracleConnection connection = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            connection.Open();
            try
            {
                string query = "";
                if (InsertId == 1)
                {

                    query = "INSERT INTO CSU_REF_SERVICE_TYPE (SERVICE_TYPE_CD,SERVICE_TYPE_DESC,CREATED_EMP_ID,SERVICE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT) " +
                                  "values((SELECT MAX(SERVICE_TYPE_CD)+1 FROM CSU_REF_SERVICE_TYPE),'" + service.ServicetypeDesc + "','" + service.CreatedBy + "', " +
                                  " " + service.Valid + ",sysdate,'" + service.UpdatedBy + "',sysdate)";

                     query = "INSERT INTO CSU_REF_SERVICE_TYPE (SERVICE_TYPE_CD,SERVICE_TYPE_DESC,CREATED_EMP_ID,SERVICE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT) " +
                                   "values((SELECT MAX(SERVICE_TYPE_CD)+1 FROM CSU_REF_SERVICE_TYPE),'" + service.ServicetypeDesc + "','" + Userid+ "', " +
                                   " " + service.Valid + ",sysdate,'" + service.UpdatedBy + "',sysdate)";

                     
                }

                if (UpdateId == 1)
                {
                    query = "update CSU_REF_SERVICE_TYPE set SERVICE_TYPE_DESC = " + service.ServicetypeDesc + ",SERVICE_VALID_CD=" + service.Valid + " where service_type_cd = " + service.SERVICE_TYPE_CD + ")";
                }
                OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                cmdOra.CommandType = CommandType.Text;
                cmdOra.ExecuteNonQuery();
                return 1;

            if(UpdateId==1)
            {
                query = "update CSU_REF_SERVICE_TYPE set SERVICE_TYPE_DESC = '" + service.ServicetypeDesc + "',SERVICE_VALID_CD=" + service.Valid + ",UPDATED_EMP_ID='"+Userid+"',UPDATED_DT=sysdate where service_type_cd = " + service.SERVICE_TYPE_CD + " ";
            }
                    //OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                    //cmdOra.CommandType = CommandType.Text;
                    //cmdOra.ExecuteNonQuery();
                    status = OracleDataAccess.ExecuteNonQuery(connection, CommandType.Text, query);
                   

            }
            finally
            {
                connection.Close();
                connection.Dispose();
            }
            return status;
        }


        public static string DeleteServiceType(int serviceId)
        {
            OracleConnection connection = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            connection.Open();
            string Message = "Success";
            try
            {
                string query = "delete from  CSU_REF_SERVICE_TYPE  where service_type_cd=" + serviceId + "";
                OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                cmdOra.CommandType = CommandType.Text;
                cmdOra.ExecuteNonQuery();
                return Message;
            }
            catch (Exception ex)
            {
                Message = ex.Message;
            }
            finally
            {
                connection.Close();
                connection.Dispose();
            }
            return Message;
        }
        #endregion

        public static DataTable getCharTypes()
        {
            OracleConnection oConn = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            GetDataFromDB objGetDataFromDB = new GetDataFromDB();
            string str = string.Empty;
            str = @"select CHAR_TYPE_ID,CHAR_TYPE_NAME,CREATED_EMP_ID,CHAR_TYPE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT,CHAR_TYPE_VALUE_COUNT from CSU_REF_CHAR_TYPE ";
            OracleCommand cmd = new OracleCommand(str.ToString(), oConn);
            return objGetDataFromDB.GetDataTable(str.ToString());
        }

        public static int InsertCharTypes(string Userid, Chartype Char, int UpdateId = 0, int InsertId = 0)
        {
            int status = 0;
            OracleConnection connection = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            connection.Open();
            try
            {
                string query = "";
                if (InsertId == 1)
                {

                    query = "INSERT INTO CSU_REF_CHAR_TYPE (CHAR_TYPE_ID,CHAR_TYPE_NAME,CREATED_EMP_ID,CHAR_TYPE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT) " +
                                  "values((SELECT MAX(CHAR_TYPE_ID)+1 FROM CSU_REF_CHAR_TYPE),'" + Char.ChartypeDesc + "','" + Char.CreatedBy + "', " +
                                  " " + Char.Valid + ",sysdate,'" + Char.UpdatedBy + "',sysdate)";

                    query = "INSERT INTO CSU_REF_CHAR_TYPE (CHAR_TYPE_ID,CHAR_TYPE_NAME,CREATED_EMP_ID,CHAR_TYPE_VALID_CD,CREATED_DT,UPDATED_EMP_ID,UPDATED_DT) " +
                                  "values((SELECT MAX(CHAR_TYPE_ID)+1 FROM CSU_REF_CHAR_TYPE),'" + Char.ChartypeDesc + "','" + Userid + "', " +
                                  " " + Char.Valid + ",sysdate,'" + Char.UpdatedBy + "',sysdate)";


                }

                if (UpdateId == 1)
                {
                    query = "update CSU_REF_CHAR_TYPE set CHAR_TYPE_NAME = " + Char.ChartypeDesc + ",CHAR_TYPE_VALID_CD=" + Char.Valid + " where CHAR_TYPE_ID = " + Char.CHAR_TYPE_ID + ")";
                }
                OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                cmdOra.CommandType = CommandType.Text;
                cmdOra.ExecuteNonQuery();
                return 1;

                if (UpdateId == 1)
                {
                    query = "update CSU_REF_CHAR_TYPE set CHAR_TYPE_NAME = '" + Char.ChartypeDesc + "',CHAR_TYPE_VALID_CD=" + Char.Valid + ",UPDATED_EMP_ID='" + Userid + "',UPDATED_DT=sysdate where CHAR_TYPE_ID = " + Char.CHAR_TYPE_ID + " ";
                }
                //OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                //cmdOra.CommandType = CommandType.Text;
                //cmdOra.ExecuteNonQuery();
                status = OracleDataAccess.ExecuteNonQuery(connection, CommandType.Text, query);


            }
            finally
            {
                connection.Close();
                connection.Dispose();
            }
            return status;
        }


        public static string DeleteCharType(int serviceId)
        {
            OracleConnection connection = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            connection.Open();
            string Message = "Success";
            try
            {
                string query = "delete from  CSU_REF_CHAR_TYPE  where CHAR_type_cd=" + serviceId + "";
                OracleCommand cmdOra = new OracleCommand(query.ToString(), connection);
                cmdOra.CommandType = CommandType.Text;
                cmdOra.ExecuteNonQuery();
                return Message;
            }
            catch (Exception ex)
            {
                Message = ex.Message;
            }
            finally
            {
                connection.Close();
                connection.Dispose();
            }
            return Message;
        }


        public static DataSet FetchData(List<string> queries, OracleConnection conn)
        {
            DataSet ds = new DataSet();
            foreach (string query in queries)
            {
                DataTable dt = new DataTable();
                OracleCommand cmd = new OracleCommand(query, conn);
                OracleDataReader reader = cmd.ExecuteReader();
                dt.Load(reader);
                reader.Close();
                ds.Tables.Add(dt);
            }
            conn.Close();
            return ds;
        }


        #region Product
        public static DataSet getProducts()
        {
            OracleConnection oConn = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));

            oConn.Open();
            try
            {
                List<string> quiries = new List<string>(new string[]{"Select product_type, product_desc From csu_product_type order by product_desc",
                                       "Select country_id, country_name From csu_country order by  country_name",
                                       "select SERVICE_TYPE_CD,SERVICE_TYPE_DESC from CSU_REF_SERVICE_TYPE",
                                       "select product_loc_level_cd,product_loc_level_desc from CSU_REF_PRODUCT_LOC_LEVEL ",
                                       "select capman_platform_id,capman_platform_name from CAPMAN_PLATFORMS  order by CAPMAN_PLATFORM_NAME",
                                       "select  product_cd, product_name,ALIAS_ID,PARENT_PRODUCT_CD from csu_product where product_valid_cd = 1 order by product_name"});
                return FetchData(quiries, oConn);
            }
            catch (Exception ex)
            {
                return null;
            }
            finally
            {
                //return status;
            }
        }


        public static string AddProduct(Products product)
        {
            string success = "success";

            OracleConnection oConn = new OracleConnection(ConfigurationManager.AppSettings.Get("OraConnString"));
            oConn.Open();

            try
            {
                string query = "Insert into csu_product(PRODUCT_TYPE ,  " +
            "COUNTRY_CD ,SERVICE_TYPE_CD ,PRODUCT_LOC_LEVEL_CD ,PRODUCT_ABBR ,Product_cd ,PRODUCT_NAME,PARENT_PRODUCT_CD , " + "ALIAS_ID ,PRODUCT_VALID_CD ,DISPLAY_LEAD_TIME ,ACCESS_METHOD_REQUIRED ,EFM_REQUIRED ,CREATED_EMP_ID ,CREATED_DT,UPDATED_EMP_ID ,UPDATED_DT) " +
            "values(" + product.PRODUCT_TYPE + " ," + product.COUNTRY_CD + " ," + product.SERVICE_TYPE_CD + " ," + product.PRODUCT_LOC_LEVEL_CD + " ,'" + product.PRODUCT_ABBR + "' ,  " +
            " (SELECT MAX(Product_cd)+1 FROM csu_product) ,'" + product.PRODUCT_NAME + "' ," + product.PARENT_PRODUCT_CD + " ," +
            "" + product.ALIAS_ID + " ," + product.PRODUCT_VALID_CD + " ," + product.DISPLAY_LEAD_TIME + " , " +
            " '" + product.ACCESS_METHOD_REQUIRED + "' , '" + product.EFM_REQUIRED + "' , " + product.CREATED_EMP_ID + " ,  sysdate ," + product.UPDATED_EMP_ID + " ,  sysdate )";
                OracleCommand cmd = new OracleCommand(query, oConn);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();


                string query2 = "SELECT max(product_cd) FROM CSU_Product";
                OracleCommand cmd1 = new OracleCommand(query2, oConn);
                int MaxProductId = Convert.ToInt32(cmd1.ExecuteScalar());

                foreach (int capman_id in product.capman_platform_id)
                {
                    string query3 = "insert into CSU_Product_CAPMANPLATFORM_MAP(PRODUCT_CD,CAPMAN_PLATFORM_ID) values(" + MaxProductId + "," + capman_id + ")";
                    OracleCommand cmd3 = new OracleCommand(query3, oConn);
                    cmd3.ExecuteNonQuery();
                }
                oConn.Close();
                return success;
            }

            catch (Exception ex)
            {
                return ex.Message;
            }

        }

        #endregion


    }
}
